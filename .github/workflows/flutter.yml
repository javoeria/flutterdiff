name: Upgrading Flutter

on:
  schedule:
    - cron: '0 0 1 * *' # At 00:00 on day-of-month 1.
  workflow_dispatch:
    inputs:
      version:
        description: 'Select a release version'
        required: false
        type: string

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ inputs.version }} 

      - name: Get Flutter version
        run: |
          VERSION=$(flutter --version | awk '/Flutter [0-9]+\.[0-9]+\.[0-9]+/ {print $2}')
          echo "Flutter $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Check if version already exists
        run: |
          git fetch --tags
          if git rev-parse "v${{ env.version }}" >/dev/null 2>&1; then
            echo "Version already exists. No update needed."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Clean project directory
        if: env.skip == 'false'
        run: |
          find . -mindepth 1 -not -path "./.git" -not -path "./.git/*" -not -path "./.github*" -exec rm -rf {} +
          ls -a

      - name: Create new Flutter project
        if: env.skip == 'false'
        run: flutter create .

      - name: Configure Git
        if: env.skip == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes
        if: env.skip == 'false'
        run: |
          git add .
          git commit -m "${{ env.version }}"
          git tag "v${{ env.version }}"
          git push origin main --tags
